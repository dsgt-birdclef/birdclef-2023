---
# NOTE: it might be better to build a packer image, but this will do too

# https://docs.docker.com/engine/install/ubuntu/
- name: install docker
  become: yes
  block:
    - name: download key for docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: add docker apt repo
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
        filename: docker
    - name: install docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
# https://github.com/cli/cli/blob/trunk/docs/install_linux.md
- name: install gh tool
  become: yes
  block:
    - name: download key and update apt repo for gh cli
      apt_key:
        url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
        state: present
    - name: add gh cli apt repo
      apt_repository:
        repo: deb [arch=amd64] https://cli.github.com/packages stable main
        state: present
        filename: github-cli
    - name: install gh cli
      apt:
        name: gh
        state: present
- name: install sops
  become: yes
  block:
    - name: set sops version
      set_fact:
        sops_version: "3.7.3"
    - name: download sops deb
      get_url:
        url: https://github.com/mozilla/sops/releases/download/v{{ sops_version }}/sops_{{ sops_version }}_amd64.deb
        dest: /tmp/sops.deb
    - name: install sops
      apt:
        deb: /tmp/sops.deb
        state: present
- name: install tfenv
  become: yes
  block:
    - name: install tfenv
      git:
        repo: https://github.com/tfutils/tfenv.git
        dest: /opt/tfenv
        version: v3.0.0
    - name: link tfenv to /usr/local/bin
      file:
        src: /opt/tfenv/bin/{{ item }}
        dest: /usr/local/bin/{{ item }}
        state: link
      with_items:
        - tfenv
        - terraform
- name: install node 18
  become: yes
  block:
    - name: add node deb repo
      shell: curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
    - name: install node
      apt:
        name: nodejs
        state: present
- name: install default other apt dependencies
  become: yes
  apt:
    name:
      - python3-pip
      - python3-venv
      - python-is-python3
      - openjdk-11-jdk # for spark
      - libffi-dev # for ansible
      - ffmpeg # for audio processing
      - libsndfile1 # for audio processing
    state: present
- name: upgrade pip
  become: yes
  pip:
    name:
      - pip
      - wheel
    state: latest
- name: install pip packages
  become: yes
  pip:
    state: latest
    name:
      - ansible
      - pre-commit
      - pip-tools
- name: install nvidia drivers and cuda
  become: yes
  block:
    - name: install nvidia drivers and cuda
      apt:
        name:
          - nvidia-driver-525
          - nvidia-utils-525
          - nvidia-cuda-toolkit
        state: present
    # https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html
    - name: download key for nvidia docker
      apt_key:
        url: https://nvidia.github.io/libnvidia-container/gpgkey
        state: present
    - name: add nvidia docker repo
      apt_repository:
        repo: deb https://nvidia.github.io/{{ item }}/ubuntu22.04/amd64/ /
        state: present
        filename: "{{ item }}"
      with_items:
        - libnvidia-container
        - nvidia-container-runtime
        - nvidia-docker
    - name: install nvidia docker packages
      apt:
        name:
          - nvidia-container-toolkit
        state: present
    - name: configure nvidia docker
      shell: nvidia-ctk runtime configure --runtime=docker
    - name: restart docker
      service:
        name: docker
        state: restarted
